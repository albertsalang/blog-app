{"version":3,"sources":["components/Header.js","components/LogInForm.js","components/SignUpForm.js","components/LogInPage.js","components/PostForm.js","components/CommentForm.js","components/ReplyComment.js","components/ReplyCommentForm.js","components/Comment.js","components/Post.js","components/UserPage.js","components/Body.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","activeUser","dispatch","setActiveUser","type","id","className","src","alt","username","to","onClick","alert","users","displaySignUpFormClickHandler","useState","emailNumber","setEmailNumber","password","setPassword","displayEmptyError","setDisplayEmptyError","displayInvalidError","setDisplayInvalidError","placeholder","value","onChange","e","target","preventDefault","map","user","addUser","setUsername","confirmPassword","setConfirmPassword","displayExistsError","setDisplayExistsError","displayPasswordError","setDisplayPasswordError","exists","forEach","uuidv4","LogInPage","displaySignUpForm","setDisplaySignUpForm","addPost","post","setPost","textAreaClassList","setTextAreaClassList","trim","addComment","comment","postId","setComment","class","replyComment","addReplyComment","commentId","setReplyComment","replyComments","displayReplyForm","setDisplayReplyForm","filter","length","comments","classsName","posts","reverse","Body","path","exact","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","state","action","usersCopy","push","postsCopy","commentsCopy","replyCommentsCopy","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gfA0CeA,eAbS,SAAC,GACxB,MAAO,CACNC,WAF0C,EAAjBA,eAMA,SAACC,GAC3B,MAAO,CACNC,cAAe,SAACF,GAAD,OACdC,EAAS,CAAEE,KAAM,gBAAiBH,WAAYA,QAIlCD,EAtCA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYE,EAAoB,EAApBA,cAK7B,OACC,wBAAQE,GAAG,aAAX,SACC,sBAAKC,UAAU,YAAf,UACC,oBAAID,GAAG,SAAP,sBACCJ,EACA,gCACC,qBAAKM,IAAI,eAAeC,IAAI,YAC5B,6BAAKP,EAAWQ,WAChB,cAAC,IAAD,CAAMJ,GAAG,aAAaK,GAAG,IAAzB,SACC,sBAAMJ,UAAU,iBAAiBK,QAbT,WAC7BC,MAAM,WACNT,EAAc,OAWT,yBAKC,a,OC2EOH,G,MAAAA,aAZS,SAAC,GACxB,MAAO,CACNa,MAFqC,EAAZA,UAMA,SAACX,GAC3B,MAAO,CACNC,cAAe,SAACF,GAAD,OACdC,EAAS,CAAEE,KAAM,gBAAiBH,WAAYA,QAGlCD,EA7FG,SAAC,GAA6D,IAA3Dc,EAA0D,EAA1DA,8BAA+BD,EAA2B,EAA3BA,MAAOV,EAAoB,EAApBA,cAAoB,EACxCY,mBAAS,IAD+B,mBACvEC,EADuE,KAC1DC,EAD0D,OAE9CF,mBAAS,IAFqC,mBAEvEG,EAFuE,KAE7DC,EAF6D,OAG5BJ,oBAAS,GAHmB,mBAGvEK,EAHuE,KAGpDC,EAHoD,OAIxBN,oBAAS,GAJe,mBAIvEO,EAJuE,KAIlDC,EAJkD,KAsC9E,OACC,sBAAKjB,UAAU,OAAOD,GAAG,iBAAzB,UACC,wCACA,uBACCD,KAAK,OACLoB,YAAY,qBACZC,MAAOT,EACPU,SAvCmC,SAACC,GACtCV,EAAeU,EAAEC,OAAOH,OACxBJ,GAAqB,GACrBE,GAAuB,MAsCtB,uBACCnB,KAAK,WACLoB,YAAY,WACZC,MAAOP,EACPQ,SAxCgC,SAACC,GACnCR,EAAYQ,EAAEC,OAAOH,OACrBJ,GAAqB,GACrBE,GAAuB,MAuCrBH,EACA,mBAAGf,GAAG,gBAAN,SACC,sEAEE,KAEHiB,EACA,mBAAGjB,GAAG,kBAAN,SACC,kEAEE,KAEJ,wBACCC,UAAU,cACVK,QAAS,kBAAMG,GAA8B,IAF9C,SAIC,iEAED,wBAAQR,UAAU,cAAlB,SACC,uDAED,cAAC,IAAD,CAAMD,GAAG,YAAYK,GAAG,QAAQC,QA1DL,SAACgB,GAK5B,IAAI1B,EAJe,KAAhBe,GAAmC,KAAbE,GACzBG,GAAqB,GACrBM,EAAEE,mBAGFhB,EAAMiB,KAAI,SAACC,GACV,GAAIA,EAAKf,cAAgBA,GAAee,EAAKb,WAAaA,EACzD,OAAQjB,EAAa8B,KAIlB9B,GAIJE,EAAcF,GACdW,MAAM,wBAJNW,GAAuB,GACvBI,EAAEE,oBA4CH,2B,QCqDY7B,eAZS,SAAC,GACxB,MAAO,CACNa,MAFqC,EAAZA,UAMA,SAACX,GAC3B,MAAO,CACN8B,QAAS,SAACD,GAAD,OAAU7B,EAAS,CAAEE,KAAM,UAAW2B,KAAMA,QAIxC/B,EA/HI,SAAC,GAAuD,IAArDc,EAAoD,EAApDA,8BAA+BD,EAAqB,EAArBA,MAAOmB,EAAc,EAAdA,QAAc,EACnCjB,mBAAS,IAD0B,mBAClEC,EADkE,KACrDC,EADqD,OAEzCF,mBAAS,IAFgC,mBAElEN,EAFkE,KAExDwB,EAFwD,OAGzClB,mBAAS,IAHgC,mBAGlEG,EAHkE,KAGxDC,EAHwD,OAI3BJ,mBAAS,IAJkB,mBAIlEmB,EAJkE,KAIjDC,EAJiD,OAKrBpB,oBAAS,GALY,mBAKlEqB,EALkE,KAK9CC,EAL8C,OAMvBtB,oBAAS,GANc,mBAMlEK,EANkE,KAM/CC,EAN+C,OAOjBN,oBAAS,GAPQ,mBAOlEuB,EAPkE,KAO5CC,EAP4C,KA6DzE,OACC,sBAAKjC,UAAU,OAAOD,GAAG,kBAAzB,UACC,iDACA,uBACCD,KAAK,OACLoB,YAAY,WACZC,MAAOhB,EACPiB,SA3DgC,SAACC,GACnCM,EAAYN,EAAEC,OAAOH,OACrBJ,GAAqB,MA2DpB,uBACCjB,KAAK,OACLoB,YAAY,qBACZC,MAAOT,EACPU,SA7DmC,SAACC,GACtCV,EAAeU,EAAEC,OAAOH,OACxBJ,GAAqB,GACrBgB,GAAsB,MA4DrB,uBACCjC,KAAK,WACLoB,YAAY,WACZC,MAAOP,EACPQ,SA9DgC,SAACC,GACnCR,EAAYQ,EAAEC,OAAOH,OACrBJ,GAAqB,GACrBkB,GAAwB,MA6DvB,uBACCnC,KAAK,WACLoB,YAAY,mBACZC,MAAOS,EACPR,SA/DuC,SAACC,GAC1CQ,EAAmBR,EAAEC,OAAOH,OAC5BJ,GAAqB,GACrBkB,GAAwB,MA8DtBnB,EACA,4BACC,sEAEE,KACHkB,EACA,4BACC,+DAEE,KACHF,EACA,4BACC,mEAEE,KAEJ,wBACC9B,UAAU,cACVK,QAAS,kBAAMG,GAA8B,IAF9C,SAIC,qDAED,wBAAQH,QAjFoB,WAC7B,GACiB,KAAhBK,GACa,KAAbP,GACa,KAAbS,GACoB,KAApBgB,EAEAb,GAAqB,QACf,GAAIH,IAAagB,EACvBK,GAAwB,OAClB,CACN,IAAIC,GAAS,EAKb,GAJA3B,EAAM4B,SAAQ,SAACV,GAAD,OACbA,EAAKf,cAAgBA,EAAewB,GAAS,EAAQ,QAGxC,GAAVA,EACHH,GAAsB,OAChB,CACN,IAAMN,EAAO,CACZ1B,GAAIqC,cACJjC,SAAUA,EACVO,YAAaA,EACbE,SAAUA,GAEXc,EAAQD,GACRnB,MAAM,wCACNE,GAA8B,MAsD/B,2BCzFY6B,G,MArBG,WAAO,IAAD,EAC2B5B,oBAAS,GADpC,mBAChB6B,EADgB,KACGC,EADH,KAEjB/B,EAAgC,SAACW,GACtCoB,EAAqBpB,IAEtB,OACC,sBAAKpB,GAAG,iBAAR,UACC,qBAAKE,IAAI,iBAAiBC,IAAI,WAC7BoC,EACA,cAAC,EAAD,CACC9B,8BAA+BA,IAGhC,cAAC,EAAD,CACCA,8BAA+BA,SCiCrBd,G,YAAAA,aAXS,SAAC,GACxB,MAAO,CACNC,WAF0C,EAAjBA,eAMA,SAACC,GAC3B,MAAO,CACN4C,QAAS,SAACC,GAAD,OAAU7C,EAAS,CAAEE,KAAM,UAAW2C,KAAMA,QAGxC/C,EA/CE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAY6C,EAAc,EAAdA,QAAc,EACrB/B,mBAAS,IADY,mBACtCgC,EADsC,KAChCC,EADgC,OAEKjC,mBAAS,IAFd,mBAEtCkC,EAFsC,KAEnBC,EAFmB,KAgB7C,OACC,sBAAK7C,GAAG,gBAAR,UACC,qBAAKE,IAAI,eAAeC,IAAI,YAC5B,gCACC,0BACCgB,YACC,OACAvB,EAAWQ,SACX,yCAEDH,UAAW2C,EACXxB,MAAOsB,EACPrB,SAxB0B,SAACC,GAC9BqB,EAAQrB,EAAEC,OAAOH,OACjByB,EAAqB,OAwBnB,wBAAQvC,QAtBiB,WACd,KAAToC,EACHG,EAAqB,yBAErBJ,EAAQ,CAAEzC,GAAIqC,cAAUX,KAAM9B,EAAWI,GAAI0C,KAAMA,EAAKI,SACxDH,EAAQ,MAiBP,4BCmBWhD,G,MAAAA,aAXS,SAAC,GACxB,MAAO,CACNC,WAF0C,EAAjBA,eAKA,SAACC,GAC3B,MAAO,CACNkD,WAAY,SAACC,GAAD,OAAanD,EAAS,CAAEE,KAAM,aAAciD,QAASA,QAIpDrD,EAjDK,SAAC,GAAwC,IAAtCsD,EAAqC,EAArCA,OAAQrD,EAA6B,EAA7BA,WAAYmD,EAAiB,EAAjBA,WAAiB,EAC7BrC,mBAAS,IADoB,mBACpDsC,EADoD,KAC3CE,EAD2C,OAETxC,mBAAS,IAFA,mBAEpDkC,EAFoD,KAEjCC,EAFiC,KAsB3D,OACC,sBAAK7C,GAAG,mBAAR,UACC,qBAAKE,IAAI,eAAeC,IAAI,YAC5B,0BACCgB,YAAY,wBACZC,MAAO4B,EACP3B,SAxBkC,SAACC,GACrC4B,EAAW5B,EAAEC,OAAOH,OACpByB,EAAqB,KAuBnB5C,UAAW2C,IAEZ,wBAAQtC,QAtBqB,WACd,KAAZ0C,EACHH,EAAqB,yBAErBE,EAAW,CACV/C,GAAIqC,cACJK,KAAMO,EACNvB,KAAM9B,EAAWI,GACjBgD,QAASA,EAAQF,SAElBI,EAAW,MAYX,SACC,sBAAMC,MAAM,iBAAZ,oCCRWxD,G,YAAAA,aANS,SAAC,GACxB,MAAO,CACNa,MAFqC,EAAZA,SAMZb,EA1BM,SAAC,GAA6B,IAA3ByD,EAA0B,EAA1BA,aAAc5C,EAAY,EAAZA,MACrC,OACC,sBAAKP,UAAU,cAAf,UACC,qBACCC,IAAI,uHACJC,IAAI,YAEL,sBAAKF,UAAU,8BAAf,UACC,+BACEO,EAAMiB,KAAI,SAACC,GAAD,OACVA,EAAK1B,KAAOoD,EAAa1B,KAAOA,EAAKtB,SAAW,QAEjD,gDAED,4BAAIgD,EAAaA,yBCsCNzD,G,MAAAA,aAZS,SAAC,GACxB,MAAO,CACNC,WAF0C,EAAjBA,eAKA,SAACC,GAC3B,MAAO,CACNwD,gBAAiB,SAACD,GAAD,OAChBvD,EAAS,CAAEE,KAAM,kBAAmBqD,aAAcA,QAItCzD,EAlDU,SAAC,GAAgD,IAA9C2D,EAA6C,EAA7CA,UAAW1D,EAAkC,EAAlCA,WAAYyD,EAAsB,EAAtBA,gBAAsB,EAChC3C,mBAAS,IADuB,mBACjE0C,EADiE,KACnDG,EADmD,OAEtB7C,mBAAS,IAFa,mBAEjEkC,EAFiE,KAE9CC,EAF8C,KAsBxE,OACC,sBAAK7C,GAAG,yBAAR,UACC,qBAAKE,IAAI,eAAeC,IAAI,YAC5B,0BACCgB,YAAY,sBACZC,MAAOgC,EACP/B,SAxBuC,SAACC,GAC1CiC,EAAgBjC,EAAEC,OAAOH,OACzByB,EAAqB,KAuBnB5C,UAAW2C,IAEZ,wBAAQtC,QAtB0B,WACd,KAAjB8C,EACHP,EAAqB,yBAErBQ,EAAgB,CACfrD,GAAIqC,cACJW,QAASM,EACT5B,KAAM9B,EAAWI,GACjBoD,aAAcA,IAEfG,EAAgB,MAYhB,SACC,sBAAMJ,MAAM,iBAAZ,oCCqBWxD,eAPS,SAAC,GACxB,MAAO,CACNa,MAFoD,EAA3BA,MAGzBgD,cAHoD,EAApBA,iBAOnB7D,EApDC,SAAC,GAAuC,IAArCqD,EAAoC,EAApCA,QAASxC,EAA2B,EAA3BA,MAAOgD,EAAoB,EAApBA,cAAoB,EACN9C,oBAAS,GADH,mBAC/C+C,EAD+C,KAC7BC,EAD6B,KAMtD,OACC,sBAAKzD,UAAU,cAAf,UACC,qBACCC,IAAI,uHACJC,IAAI,YAEL,sBAAKF,UAAU,8BAAf,UACC,+BACEO,EAAMiB,KAAI,SAACC,GAAD,OACVA,EAAK1B,KAAOgD,EAAQtB,KAAOA,EAAKtB,SAAW,QAE5C,gDAED,8BACE4C,EAAQA,QACT,wBAAQ1C,QAlBuB,WAClCoD,GAAoB,IAiBjB,SACC,sBAAMP,MAAM,iBAAZ,wBAMU,GAFXK,EAAcG,QACd,SAACP,GAAD,OAAkBA,EAAaJ,UAAYA,EAAQhD,MAClD4D,OACD,mBAAGT,MAAM,kBAAT,SACC,8CAEE,KAEHK,EAAc/B,KAAI,SAAC2B,GAAD,OAClBA,EAAaJ,UAAYA,EAAQhD,GAChC,cAAC,EAAD,CAAcoD,aAAcA,IACzB,QAEJK,EAAmB,cAAC,EAAD,CAAkBH,UAAWN,EAAQhD,KAAS,cCevDL,G,MAAAA,aANS,SAAC,GACxB,MAAO,CACNa,MAF+C,EAAtBA,MAGzBqD,SAH+C,EAAfA,YAMnBlE,EAvDF,SAAC,GAA+B,IAA7B+C,EAA4B,EAA5BA,KAAMlC,EAAsB,EAAtBA,MAAOqD,EAAe,EAAfA,SAC5B,OACC,sBAAK5D,UAAU,WAAf,UACC,sBAAKA,UAAU,kBAAf,UACC,qBACCC,IAAI,uHACJC,IAAI,YAEL,+BACEK,EAAMiB,KAAI,SAACC,GAAD,OAAWA,EAAK1B,KAAO0C,EAAKhB,KAAOA,EAAKtB,SAAW,QAC9D,uBACA,mDAIF,mBAAGH,UAAU,SAAb,SAAuByC,EAAKA,OAE5B,sBAAKzC,UAAU,mBAAf,UACC,uCACE,sBAAMkD,MAAM,iBAAZ,gCAEF,mCACEU,EAASF,QAAO,SAACX,GAAD,OAAaA,EAAQN,OAASA,EAAK1C,MAAI4D,OACxD,sBAAMT,MAAM,iBAAZ,oCAED,uCACE,sBAAMA,MAAM,iBAAZ,yBAIH,sBAAKlD,UAAU,yBAAf,UACC,sBAAK6D,WAAW,+BAAhB,UAEC,GADCD,EAASF,QAAO,SAACX,GAAD,OAAaA,EAAQN,OAASA,EAAK1C,MAAI4D,OAEvD,4BACC,+CAEE,KAEHC,EAASpC,KAAI,SAACuB,GAAD,OACbA,EAAQN,OAASA,EAAK1C,GAAK,cAAC,EAAD,CAASgD,QAASA,IAAc,WAG7D,cAAC,EAAD,CAAaC,OAAQP,EAAK1C,eC5BfL,eANS,SAAC,GACxB,MAAO,CACNoE,MAFiD,EAAxBA,MAGzBnE,WAHiD,EAAjBA,cAMnBD,EAfE,SAAC,GAA2B,IAAzBoE,EAAwB,EAAxBA,MAAwB,EAAjBnE,WAC1B,OACC,sBAAKI,GAAG,gBAAR,UACC,cAAC,EAAD,IACC+D,EAAMtC,KAAI,SAACiB,GAAD,OAAU,cAAC,EAAD,CAAMA,KAAMA,OAAUsB,gB,eCS/BC,EAbF,WACZ,OACC,sBAAKjE,GAAG,WAAWmD,MAAM,YAAzB,UACC,cAAC,IAAD,CAAOe,KAAK,IAAIC,OAAK,EAArB,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,EAAzB,SACC,cAAC,EAAD,UCIWC,G,kKAVd,WACC,OACC,sBAAKpE,GAAG,UAAR,UACC,cAAC,EAAD,IACA,cAAC,EAAD,W,GALcqE,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCPRQ,EAAe,CACpBxE,MAAO,GACPZ,WAAY,GACZmE,MAAO,GACPF,SAAU,GACVL,cAAe,IAgDDyB,EA7CC,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACjD,OAAQA,EAAOpF,MACd,IAAK,UACJ,IAAIqF,EAAS,YAAOF,EAAM1E,OAE1B,OADA4E,EAAUC,KAAKF,EAAOzD,MACf,2BACHwD,GADJ,IAEC1E,MAAO4E,IAGT,IAAK,gBACJ,OAAO,2BACHF,GADJ,IAECtF,WAAYuF,EAAOvF,aAGrB,IAAK,UACJ,IAAI0F,EAAS,YAAOJ,EAAMnB,OAE1B,OADAuB,EAAUD,KAAKF,EAAOzC,MACf,2BACHwC,GADJ,IAECnB,MAAOuB,IAGT,IAAK,aACJ,IAAIC,EAAY,YAAOL,EAAMrB,UAE7B,OADA0B,EAAaF,KAAKF,EAAOnC,SAClB,2BACHkC,GADJ,IAECrB,SAAU0B,IAGZ,IAAK,kBACJ,IAAIC,EAAiB,YAAON,EAAM1B,eAElC,OADAgC,EAAkBH,KAAKF,EAAO/B,cACvB,2BACH8B,GADJ,IAEC1B,cAAegC,IAGjB,QACC,OAAON,IC5CKO,EAFDC,YAAYT,GCM1BU,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACC,cAAC,EAAD,UAIHK,SAASC,eAAe,SAMzBxB,M","file":"static/js/main.4c939a70.chunk.js","sourcesContent":["import \"./css/Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Header = ({ activeUser, setActiveUser }) => {\r\n\tconst btnLogOutClickHandler = () => {\r\n\t\talert(\"Log out\");\r\n\t\tsetActiveUser(null);\r\n\t};\r\n\treturn (\r\n\t\t<header id=\"div-header\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1 id=\"p-logo\">Blog App</h1>\r\n\t\t\t\t{activeUser ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src=\"img/user.png\" alt=\"profile\" />\r\n\t\t\t\t\t\t<h3>{activeUser.username}</h3>\r\n\t\t\t\t\t\t<Link id=\"btn-logout\" to=\"/\">\r\n\t\t\t\t\t\t\t<span className=\"material-icons\" onClick={btnLogOutClickHandler}>\r\n\t\t\t\t\t\t\t\tlogout\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ activeUser }) => {\r\n\treturn {\r\n\t\tactiveUser,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetActiveUser: (activeUser) =>\r\n\t\t\tdispatch({ type: \"setActiveUser\", activeUser: activeUser }),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import \"./css/Form.css\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LogInForm = ({ displaySignUpFormClickHandler, users, setActiveUser }) => {\r\n\tconst [emailNumber, setEmailNumber] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [displayEmptyError, setDisplayEmptyError] = useState(false);\r\n\tconst [displayInvalidError, setDisplayInvalidError] = useState(false);\r\n\r\n\tconst inputEmailNumberChangeHandler = (e) => {\r\n\t\tsetEmailNumber(e.target.value);\r\n\t\tsetDisplayEmptyError(false);\r\n\t\tsetDisplayInvalidError(false);\r\n\t};\r\n\tconst inputPasswordChangeHandler = (e) => {\r\n\t\tsetPassword(e.target.value);\r\n\t\tsetDisplayEmptyError(false);\r\n\t\tsetDisplayInvalidError(false);\r\n\t};\r\n\tconst btnLoginClickHandler = (e) => {\r\n\t\tif (emailNumber === \"\" || password === \"\") {\r\n\t\t\tsetDisplayEmptyError(true);\r\n\t\t\te.preventDefault();\r\n\t\t} else {\r\n\t\t\tlet activeUser;\r\n\t\t\tusers.map((user) => {\r\n\t\t\t\tif (user.emailNumber === emailNumber && user.password === password) {\r\n\t\t\t\t\treturn (activeUser = user);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (!activeUser) {\r\n\t\t\t\tsetDisplayInvalidError(true);\r\n\t\t\t\te.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tsetActiveUser(activeUser);\r\n\t\t\t\talert(\"Log in successful!\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"form\" id=\"div-login-form\">\r\n\t\t\t<h2>Log In</h2>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Email/Phone Number\"\r\n\t\t\t\tvalue={emailNumber}\r\n\t\t\t\tonChange={inputEmailNumberChangeHandler}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\tvalue={password}\r\n\t\t\t\tonChange={inputPasswordChangeHandler}\r\n\t\t\t/>\r\n\t\t\t{displayEmptyError ? (\r\n\t\t\t\t<p id=\"p-error-empty\">\r\n\t\t\t\t\t<small>*All fields must be filled out.</small>\r\n\t\t\t\t</p>\r\n\t\t\t) : null}\r\n\r\n\t\t\t{displayInvalidError ? (\r\n\t\t\t\t<p id=\"p-error-invalid\">\r\n\t\t\t\t\t<small>*Invalid username/password.</small>\r\n\t\t\t\t</p>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-link\"\r\n\t\t\t\tonClick={() => displaySignUpFormClickHandler(true)}\r\n\t\t\t>\r\n\t\t\t\t<small>Don't have an account yet?</small>\r\n\t\t\t</button>\r\n\t\t\t<button className=\"button-link\">\r\n\t\t\t\t<small>Forgot password?</small>\r\n\t\t\t</button>\r\n\t\t\t<Link id=\"btn-login\" to=\"/user\" onClick={btnLoginClickHandler}>\r\n\t\t\t\tLog In\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n\treturn {\r\n\t\tusers,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetActiveUser: (activeUser) =>\r\n\t\t\tdispatch({ type: \"setActiveUser\", activeUser: activeUser }),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);\r\n","import \"./css/Form.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SignUpForm = ({ displaySignUpFormClickHandler, users, addUser }) => {\r\n\tconst [emailNumber, setEmailNumber] = useState(\"\");\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\tconst [displayExistsError, setDisplayExistsError] = useState(false);\r\n\tconst [displayEmptyError, setDisplayEmptyError] = useState(false);\r\n\tconst [displayPasswordError, setDisplayPasswordError] = useState(false);\r\n\r\n\tconst inputUsernameChangeHandler = (e) => {\r\n\t\tsetUsername(e.target.value);\r\n\t\tsetDisplayEmptyError(false);\r\n\t};\r\n\tconst inputEmailNumberChangeHandler = (e) => {\r\n\t\tsetEmailNumber(e.target.value);\r\n\t\tsetDisplayEmptyError(false);\r\n\t\tsetDisplayExistsError(false);\r\n\t};\r\n\tconst inputPasswordChangeHandler = (e) => {\r\n\t\tsetPassword(e.target.value);\r\n\t\tsetDisplayEmptyError(false);\r\n\t\tsetDisplayPasswordError(false);\r\n\t};\r\n\tconst inputConfirmPasswordChangeHandler = (e) => {\r\n\t\tsetConfirmPassword(e.target.value);\r\n\t\tsetDisplayEmptyError(false);\r\n\t\tsetDisplayPasswordError(false);\r\n\t};\r\n\r\n\tconst btnSignUpClickHandler = () => {\r\n\t\tif (\r\n\t\t\temailNumber === \"\" ||\r\n\t\t\tusername === \"\" ||\r\n\t\t\tpassword === \"\" ||\r\n\t\t\tconfirmPassword === \"\"\r\n\t\t) {\r\n\t\t\tsetDisplayEmptyError(true);\r\n\t\t} else if (password !== confirmPassword) {\r\n\t\t\tsetDisplayPasswordError(true);\r\n\t\t} else {\r\n\t\t\tlet exists = false;\r\n\t\t\tusers.forEach((user) =>\r\n\t\t\t\tuser.emailNumber === emailNumber ? (exists = true) : null\r\n\t\t\t);\r\n\r\n\t\t\tif (exists == true) {\r\n\t\t\t\tsetDisplayExistsError(true);\r\n\t\t\t} else {\r\n\t\t\t\tconst user = {\r\n\t\t\t\t\tid: uuidv4(),\r\n\t\t\t\t\tusername: username,\r\n\t\t\t\t\temailNumber: emailNumber,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t};\r\n\t\t\t\taddUser(user);\r\n\t\t\t\talert(\"You may now log in your new account.\");\r\n\t\t\t\tdisplaySignUpFormClickHandler(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"form\" id=\"div-signup-form\">\r\n\t\t\t<h2>Create account </h2>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\tvalue={username}\r\n\t\t\t\tonChange={inputUsernameChangeHandler}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Email/Phone Number\"\r\n\t\t\t\tvalue={emailNumber}\r\n\t\t\t\tonChange={inputEmailNumberChangeHandler}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\tvalue={password}\r\n\t\t\t\tonChange={inputPasswordChangeHandler}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\tonChange={inputConfirmPasswordChangeHandler}\r\n\t\t\t/>\r\n\t\t\t{displayEmptyError ? (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<small>*All fields must be filled out.</small>\r\n\t\t\t\t</p>\r\n\t\t\t) : null}\r\n\t\t\t{displayPasswordError ? (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<small>*Password did not match.</small>\r\n\t\t\t\t</p>\r\n\t\t\t) : null}\r\n\t\t\t{displayExistsError ? (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<small>*Email/Number already exist.</small>\r\n\t\t\t\t</p>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-link\"\r\n\t\t\t\tonClick={() => displaySignUpFormClickHandler(false)}\r\n\t\t\t>\r\n\t\t\t\t<small>Back to login.</small>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={btnSignUpClickHandler}>Sign Up</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n\treturn {\r\n\t\tusers,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddUser: (user) => dispatch({ type: \"addUser\", user: user }),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);\r\n","import LogInForm from \"./LogInForm\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport \"./css/LogInPage.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst LogInPage = () => {\r\n\tconst [displaySignUpForm, setDisplaySignUpForm] = useState(false);\r\n\tconst displaySignUpFormClickHandler = (value) => {\r\n\t\tsetDisplaySignUpForm(value);\r\n\t};\r\n\treturn (\r\n\t\t<div id=\"div-login-page\">\r\n\t\t\t<img src=\"img/social.png\" alt=\"social\" />\r\n\t\t\t{displaySignUpForm ? (\r\n\t\t\t\t<SignUpForm\r\n\t\t\t\t\tdisplaySignUpFormClickHandler={displaySignUpFormClickHandler}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<LogInForm\r\n\t\t\t\t\tdisplaySignUpFormClickHandler={displaySignUpFormClickHandler}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LogInPage;\r\n","import \"./css/PostForm.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nconst PostForm = ({ activeUser, addPost }) => {\r\n\tconst [post, setPost] = useState(\"\");\r\n\tconst [textAreaClassList, setTextAreaClassList] = useState(\"\");\r\n\r\n\tconst textAreaChangeHandler = (e) => {\r\n\t\tsetPost(e.target.value);\r\n\t\tsetTextAreaClassList(\"\");\r\n\t};\r\n\tconst btnPostClickHandler = () => {\r\n\t\tif (post === \"\") {\r\n\t\t\tsetTextAreaClassList(\"border-primary-color\");\r\n\t\t} else {\r\n\t\t\taddPost({ id: uuidv4(), user: activeUser.id, post: post.trim() });\r\n\t\t\tsetPost(\"\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div id=\"div-post-form\">\r\n\t\t\t<img src=\"img/user.png\" alt=\"profile\" />\r\n\t\t\t<div>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\"Hi, \" +\r\n\t\t\t\t\t\tactiveUser.username +\r\n\t\t\t\t\t\t\"! Want to share your thought with us? \"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName={textAreaClassList}\r\n\t\t\t\t\tvalue={post}\r\n\t\t\t\t\tonChange={textAreaChangeHandler}\r\n\t\t\t\t></textarea>\r\n\t\t\t\t<button onClick={btnPostClickHandler}>Post</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ activeUser }) => {\r\n\treturn {\r\n\t\tactiveUser,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (post) => dispatch({ type: \"addPost\", post: post }),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./css/CommentForm.css\";\r\n\r\nconst CommentForm = ({ postId, activeUser, addComment }) => {\r\n\tconst [comment, setComment] = useState(\"\");\r\n\tconst [textAreaClassList, setTextAreaClassList] = useState(\"\");\r\n\r\n\tconst textAreaCommentChangeHandler = (e) => {\r\n\t\tsetComment(e.target.value);\r\n\t\tsetTextAreaClassList(\"\");\r\n\t};\r\n\r\n\tconst btnCommentClickHandler = () => {\r\n\t\tif (comment === \"\") {\r\n\t\t\tsetTextAreaClassList(\"border-primary-color\");\r\n\t\t} else {\r\n\t\t\taddComment({\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t\tpost: postId,\r\n\t\t\t\tuser: activeUser.id,\r\n\t\t\t\tcomment: comment.trim(),\r\n\t\t\t});\r\n\t\t\tsetComment(\"\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div id=\"div-comment-form\">\r\n\t\t\t<img src=\"img/user.png\" alt=\"profile\" />\r\n\t\t\t<textarea\r\n\t\t\t\tplaceholder=\"Write a comment here.\"\r\n\t\t\t\tvalue={comment}\r\n\t\t\t\tonChange={textAreaCommentChangeHandler}\r\n\t\t\t\tclassName={textAreaClassList}\r\n\t\t\t></textarea>\r\n\t\t\t<button onClick={btnCommentClickHandler}>\r\n\t\t\t\t<span class=\"material-icons\">arrow_forward</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ activeUser }) => {\r\n\treturn {\r\n\t\tactiveUser,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddComment: (comment) => dispatch({ type: \"addComment\", comment: comment }),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentForm);\r\n","import { connect } from \"react-redux\";\r\nimport \"./css/ReplyComment.css\";\r\n\r\nconst ReplyComment = ({ replyComment, users }) => {\r\n\treturn (\r\n\t\t<div className=\"div-comment\">\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://www.flaticon.com/svg/vstatic/svg/3135/3135715.svg?token=exp=1620954866~hmac=7fef0438734cea2af5c6ed16095d82f8\"\r\n\t\t\t\talt=\"profile\"\r\n\t\t\t/>\r\n\t\t\t<div className=\"div-comment-inner-container\">\r\n\t\t\t\t<h5>\r\n\t\t\t\t\t{users.map((user) =>\r\n\t\t\t\t\t\tuser.id === replyComment.user ? user.username : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<small>Just now</small>\r\n\t\t\t\t</h5>\r\n\t\t\t\t<p>{replyComment.replyComment}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n\treturn {\r\n\t\tusers,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(ReplyComment);\r\n","import { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./css/ReplyCommentForm.css\";\r\n\r\nconst ReplyCommentForm = ({ commentId, activeUser, addReplyComment }) => {\r\n\tconst [replyComment, setReplyComment] = useState(\"\");\r\n\tconst [textAreaClassList, setTextAreaClassList] = useState(\"\");\r\n\r\n\tconst textAreaReplyCommentChangeHandler = (e) => {\r\n\t\tsetReplyComment(e.target.value);\r\n\t\tsetTextAreaClassList(\"\");\r\n\t};\r\n\r\n\tconst btnReplyCommentClickHandler = () => {\r\n\t\tif (replyComment === \"\") {\r\n\t\t\tsetTextAreaClassList(\"border-primary-color\");\r\n\t\t} else {\r\n\t\t\taddReplyComment({\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t\tcomment: commentId,\r\n\t\t\t\tuser: activeUser.id,\r\n\t\t\t\treplyComment: replyComment,\r\n\t\t\t});\r\n\t\t\tsetReplyComment(\"\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div id=\"div-reply-comment-form\">\r\n\t\t\t<img src=\"img/user.png\" alt=\"profile\" />\r\n\t\t\t<textarea\r\n\t\t\t\tplaceholder=\"Write a reply here.\"\r\n\t\t\t\tvalue={replyComment}\r\n\t\t\t\tonChange={textAreaReplyCommentChangeHandler}\r\n\t\t\t\tclassName={textAreaClassList}\r\n\t\t\t></textarea>\r\n\t\t\t<button onClick={btnReplyCommentClickHandler}>\r\n\t\t\t\t<span class=\"material-icons\">arrow_forward</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ activeUser }) => {\r\n\treturn {\r\n\t\tactiveUser,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddReplyComment: (replyComment) =>\r\n\t\t\tdispatch({ type: \"addReplyComment\", replyComment: replyComment }),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReplyCommentForm);\r\n","import { connect } from \"react-redux\";\r\nimport \"./css/Comment.css\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport ReplyCommentForm from \"./ReplyCommentForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst Comment = ({ comment, users, replyComments }) => {\r\n\tconst [displayReplyForm, setDisplayReplyForm] = useState(false);\r\n\r\n\tconst btnDisplayFormClickHandler = () => {\r\n\t\tsetDisplayReplyForm(true);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"div-comment\">\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://www.flaticon.com/svg/vstatic/svg/3135/3135715.svg?token=exp=1620954866~hmac=7fef0438734cea2af5c6ed16095d82f8\"\r\n\t\t\t\talt=\"profile\"\r\n\t\t\t/>\r\n\t\t\t<div className=\"div-comment-inner-container\">\r\n\t\t\t\t<h5>\r\n\t\t\t\t\t{users.map((user) =>\r\n\t\t\t\t\t\tuser.id === comment.user ? user.username : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<small>Just now</small>\r\n\t\t\t\t</h5>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{comment.comment}\r\n\t\t\t\t\t<button onClick={btnDisplayFormClickHandler}>\r\n\t\t\t\t\t\t<span class=\"material-icons\">reply</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t{replyComments.filter(\r\n\t\t\t\t\t(replyComment) => replyComment.comment === comment.id\r\n\t\t\t\t).length != 0 ? (\r\n\t\t\t\t\t<p class=\"p-title-replies\">\r\n\t\t\t\t\t\t<small>Replies</small>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t) : null}\r\n\r\n\t\t\t\t{replyComments.map((replyComment) =>\r\n\t\t\t\t\treplyComment.comment === comment.id ? (\r\n\t\t\t\t\t\t<ReplyComment replyComment={replyComment} />\r\n\t\t\t\t\t) : null\r\n\t\t\t\t)}\r\n\t\t\t\t{displayReplyForm ? <ReplyCommentForm commentId={comment.id} /> : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ users, replyComments }) => {\r\n\treturn {\r\n\t\tusers,\r\n\t\treplyComments,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Comment);\r\n","import { connect } from \"react-redux\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport Comment from \"./Comment\";\r\nimport \"./css/Post.css\";\r\n\r\nconst Post = ({ post, users, comments }) => {\r\n\treturn (\r\n\t\t<div className=\"div-post\">\r\n\t\t\t<div className=\"div-post-header\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://www.flaticon.com/svg/vstatic/svg/3135/3135715.svg?token=exp=1620954866~hmac=7fef0438734cea2af5c6ed16095d82f8\"\r\n\t\t\t\t\talt=\"profile\"\r\n\t\t\t\t/>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\t{users.map((user) => (user.id === post.user ? user.username : null))}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<small>Just now</small>\r\n\t\t\t\t</h4>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p className=\"p-post\">{post.post}</p>\r\n\r\n\t\t\t<div className=\"div-button-group\">\r\n\t\t\t\t<button>\r\n\t\t\t\t\t0<span class=\"material-icons\">favorite_border</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button>\r\n\t\t\t\t\t{comments.filter((comment) => comment.post === post.id).length}\r\n\t\t\t\t\t<span class=\"material-icons\">chat_bubble_outline</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button>\r\n\t\t\t\t\t0<span class=\"material-icons\">share</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"div-comments-container\">\r\n\t\t\t\t<div classsName=\"div-comments-inner-container\">\r\n\t\t\t\t\t{comments.filter((comment) => comment.post === post.id).length !=\r\n\t\t\t\t\t0 ? (\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<small>Comments</small>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t{comments.map((comment) =>\r\n\t\t\t\t\t\tcomment.post === post.id ? <Comment comment={comment} /> : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<CommentForm postId={post.id} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ users, comments }) => {\r\n\treturn {\r\n\t\tusers,\r\n\t\tcomments,\r\n\t};\r\n};\r\nexport default connect(mapStateToProps)(Post);\r\n","import \"./css/UserPage.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UserPage = ({ posts, activeUser }) => {\r\n\treturn (\r\n\t\t<div id=\"div-user-page\">\r\n\t\t\t<PostForm />\r\n\t\t\t{posts.map((post) => <Post post={post} />).reverse()}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ posts, activeUser }) => {\r\n\treturn {\r\n\t\tposts,\r\n\t\tactiveUser,\r\n\t};\r\n};\r\nexport default connect(mapStateToProps)(UserPage);\r\n","import LogInPage from \"./LogInPage\";\r\nimport UserPage from \"./UserPage\";\r\nimport \"./css/Body.css\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst Body = () => {\r\n\treturn (\r\n\t\t<div id=\"div-body\" class=\"container\">\r\n\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t<LogInPage />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/user\" exact>\r\n\t\t\t\t<UserPage />\r\n\t\t\t</Route>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"div-app\">\n\t\t\t\t<Header />\n\t\t\t\t<Body />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n\tusers: [],\r\n\tactiveUser: \"\",\r\n\tposts: [],\r\n\tcomments: [],\r\n\treplyComments: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"addUser\":\r\n\t\t\tlet usersCopy = [...state.users];\r\n\t\t\tusersCopy.push(action.user);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: usersCopy,\r\n\t\t\t};\r\n\r\n\t\tcase \"setActiveUser\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveUser: action.activeUser,\r\n\t\t\t};\r\n\r\n\t\tcase \"addPost\":\r\n\t\t\tlet postsCopy = [...state.posts];\r\n\t\t\tpostsCopy.push(action.post);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: postsCopy,\r\n\t\t\t};\r\n\r\n\t\tcase \"addComment\":\r\n\t\t\tlet commentsCopy = [...state.comments];\r\n\t\t\tcommentsCopy.push(action.comment);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcomments: commentsCopy,\r\n\t\t\t};\r\n\r\n\t\tcase \"addReplyComment\":\r\n\t\t\tlet replyCommentsCopy = [...state.replyComments];\r\n\t\t\treplyCommentsCopy.push(action.replyComment);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\treplyComments: replyCommentsCopy,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}